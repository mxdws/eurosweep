---
import Layout from '../layouts/Layout.astro';
import FixtureList from '../components/FixturesList.astro';
import { fade } from 'astro:transitions';

// Do Data Fetching

// Define the parameters
const baseId = import.meta.env.BASEID
const fixturesTableId = import.meta.env.FIXTURESTABLEID
const teamsTableId = import.meta.env.TEAMSTABLEID

const token = import.meta.env.TOKEN

const headers = {
    'Authorization': 'Bearer ' + token
};

// Get the Fixtures Data
const fixturesUrl = `https://api.airtable.com/v0/${baseId}/${fixturesTableId}`;
const fixturesRes = await fetch(fixturesUrl, {
    method: "GET",
    headers: headers
});
const fixtures = await fixturesRes.json();
// console.log("Fixtures: " + (fixtures.records.length))

// Get the Teams Data
const teamsUrl = `https://api.airtable.com/v0/${baseId}/${teamsTableId}`;
const teamsRes = await fetch(teamsUrl, {
    method: "GET",
    headers: headers
});
const teams = await teamsRes.json();

const matchData = []
    for (let i=0; i<fixtures.records.length; i++) {
        const match = {}
        match['Date'] = fixtures.records[i].fields['Date']
		match['Date Narrative'] = fixtures.records[i].fields['Date Narrative']
        match['Time'] = fixtures.records[i].fields['Time']
        match['Group'] = fixtures.records[i].fields['Group']
        match['Stage'] = fixtures.records[i].fields['Stage']


        // If there is a Home Team, resolve the Home Team Ids from Teams obj
        // While we're at it, get the Sweep Member for Home
        if ('Home Team' in fixtures.records[i].fields) {
            // Home Team
            const homeTeamId = fixtures.records[i].fields['Home Team'][0]
            const homeTeamNameObj = teams.records.filter(function(t) {
                return t.id == homeTeamId
            })
            match['Home Team'] = homeTeamNameObj[0].fields['Name']
            match['Home Team Sweep'] = homeTeamNameObj[0].fields['Drawn By']
        } else {
            match['Home Team'] = ""
            match['Home Team Sweep'] = ""
        }

        // If there is an Away Team, resolve the Away Team Ids from Teams obj
        // While we're at it, get the Sweep Member for Away
        if ('Away Team' in fixtures.records[i].fields) {
            // Away Team
            const awayTeamId = fixtures.records[i].fields['Away Team'][0]
            const awayTeamNameObj = teams.records.filter(function(t) {
                return t.id == awayTeamId
            })
    
            match['Away Team'] = awayTeamNameObj[0].fields['Name']
            match['Away Team Sweep'] = awayTeamNameObj[0].fields['Drawn By']
        } else {
            match['Away Team'] = ""
            match['Away Team Sweep'] = ""
        }

        // If there is a Result, grab the result and Home and Away goals
        if ('Result' in fixtures.records[i].fields) {
            match['Result'] = fixtures.records[i].fields['Result']
            match['Home Goals'] = fixtures.records[i].fields['Home Goals']
            match['Away Goals'] = fixtures.records[i].fields['Away Goals']
        } else {
            match['Result'] = ""
            match['Home Goals'] = ""
            match['Away Goals'] = ""
        }
    



        matchData.push(match)
		
    }

    // Get just the Group Matches
	const groupMatches = matchData.filter(function(m) {
		return m.Stage == 'Group'
	})

    // Get just the Round of 16 Matches
	const r16Matches = matchData.filter(function(m) {
		return m.Stage == 'Round of 16'
	})

    // Get just the Quarter-finals Matches
	const qfMatches = matchData.filter(function(m) {
		return m.Stage == 'Quarter-finals'
	})

    // Get just the Semi-finals Matches
	const sfMatches = matchData.filter(function(m) {
		return m.Stage == 'Semi-finals'
	})

    // Get just the Final Matches
	const fMatches = matchData.filter(function(m) {
		return m.Stage == 'Final'
	})


---


<Layout title="Euro 2024 Results - with Sweepstake info" herotext="Fixtures">
	<main>
        <FixtureList roundMatches={groupMatches} roundTitle="Group Matches" />       
        <FixtureList roundMatches={r16Matches} roundTitle="Round of 16" />       
        <FixtureList roundMatches={qfMatches} roundTitle="Quarter-finals" />       
        <FixtureList roundMatches={sfMatches} roundTitle="Semi-finals" />       
        <FixtureList roundMatches={fMatches} roundTitle="Final" />       
	</main>
</Layout>

<style>
	
</style>
